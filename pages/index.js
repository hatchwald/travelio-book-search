import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react'
import styles from '../styles/Home.module.css'
import StarRatings from 'react-star-ratings'
import { ToastContainer, toast } from 'react-toast'
import Link from 'next/link'

export default function Home() {
  const [search_field, Setsearch] = useState(null)
  const [data, Setdata] = useState(null)
  const [isLoading, setLoading] = useState(false)
  const check_search = e => {
    const val = e.target.value
    Setsearch(val)
  }
  const handleFavorite = (param) => {
    const myheader = new Headers()
    const success = () => {
      toast.success("success add book to Favorite !")
    }
    const warning = param => {
      toast.warn(param)
    }
    const errorToast = param => {
      toast.error(param)
    }
    myheader.append("Content-Type", "application/json");

    const raw = JSON.stringify({
      "id": param.id,
      "title": param.volumeInfo.title,
      "thumbnail": param.volumeInfo.imageLinks.thumbnail,
      "author": (param.volumeInfo.authors) ? param.volumeInfo.authors.join(",") : param.volumeInfo.publisher,
      "rating": param.volumeInfo.averageRating
    });

    const requestOptions = {
      method: 'POST',
      headers: myheader,
      body: raw,
      redirect: 'follow'
    };

    fetch("/api/books", requestOptions)
      .then(response => response.text())
      .then(result => {
        const data_json = JSON.parse(result)
        if (data_json.success) {
          success()
        } else {
          warning(data_json.message)
        }
        console.log(data_json)
      })
      .catch(error => {
        errorToast(`Error ${error}`)
        console.log('error', error)
      });
    console.log("clicked ", param)
  }
  const submit_search = async (e) => {
    e.preventDefault()
    setLoading(true)
    const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${search_field}`)
      .then((res) => res.json())
      .then((data) => {
        setLoading(false)
        return data
      })
    Setdata(response.items)
    console.log(response)
  }

  if (isLoading) return <p>Loading Fetch data...</p>

  if (!data) return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className='has-text-right'><Link href='/favorites'> Your Favorite Books</Link></div>
        <h3 className='is-size-3'>
          Search data book with Google API
        </h3>

        <div className='columns'>
          <div className='column is-12'>
            <form className='field is-grouped' onSubmit={submit_search}>
              <p className='control'>
                <input className='input' type="text" placeholder="Text input" onChange={check_search} autoFocus={true} />
              </p>
              <p className='control'>
                <button className='button'>Search</button>
              </p>
            </form>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <ToastContainer delay={3000} />
      <main className={styles.main}>
        <div className='is-align-self-flex-end'><Link href='/favorites'>Your Favorite Books</Link></div>
        <div className='columns'>
          <div className='column is-full'>
            <form className='field is-grouped' onSubmit={submit_search}>
              <p className='control'>
                <input className='input' type="text" placeholder="Text input" onChange={check_search} value={search_field} autoFocus={true} />
              </p>
              <p className='control'>
                <button className='button'>Search</button>
              </p>
            </form>
          </div>
        </div>
        <div className='columns'>
          <div className='column'>
            <table className='table'>
              <thead>
                <tr>
                  <th>Number</th>
                  <th>Title</th>
                  <th>Thumbnail</th>
                  <th>Author</th>
                  <th>Rating</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody>
                {data.map((params, index) => (
                  <tr key={params.volumeInfo.id}>
                    <td>{index + 1}</td>
                    <td>{params.volumeInfo.title}</td>
                    <td><Image src={params.volumeInfo.imageLinks.thumbnail} alt="thumnail books" height={50} width={50} /></td>
                    <td>{(params.volumeInfo.authors) ? params.volumeInfo.authors.join(",") : params.volumeInfo.publisher}</td>
                    <td><StarRatings rating={params.volumeInfo.averageRating} starDimension='15' starSpacing='5px' /></td>
                    <td><button className='button' onClick={() => handleFavorite(params)}>Add to Favorite</button></td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
